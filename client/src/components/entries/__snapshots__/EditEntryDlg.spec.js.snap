// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`EditEntryDlg tests renders correctly 1`] = `
<Modal
  ariaHideApp={true}
  bodyOpenClassName="ReactModal__Body--open"
  closeTimeoutMS={0}
  isOpen={false}
  onRequestClose={[Function]}
  parentSelector={[Function]}
  portalClassName="ReactModalPortal"
  role="dialog"
  shouldCloseOnEsc={true}
  shouldCloseOnOverlayClick={true}
  shouldFocusAfterRender={true}
  shouldReturnFocusAfterClose={true}
  style={
    Object {
      "content": Object {
        "bottom": 0,
        "display": "flex",
        "flexFlow": "column nowrap",
        "height": 400,
        "justifyContent": "space-between",
        "left": 0,
        "marginBottom": "auto",
        "marginLeft": "auto",
        "marginRight": "auto",
        "marginTop": "auto",
        "maxHeight": 400,
        "overflow": "visible",
        "right": 0,
        "top": 0,
        "width": 500,
      },
      "overlay": Object {
        "backgroundColor": "rgba(0, 0, 0, 0.75)",
      },
    }
  }
>
  <EntryControls
    cancelEntryEdit={[MockFunction]}
    changeChannel={[MockFunction]}
    changeStatus={[MockFunction]}
    changeValue={[MockFunction]}
    group={
      Object {
        "active": false,
        "channel": 9,
        "editQueue": Object {
          "entryId": -1,
          "input": Object {
            "channel": 9,
            "status": 9,
            "value": 0,
          },
          "output": Object {
            "channel": 9,
            "status": 9,
            "value": 0,
          },
        },
        "editing": false,
        "entries": Array [
          Object {
            "entryId": 0,
            "input": Object {
              "channel": 9,
              "status": 9,
              "value": 1,
            },
            "output": Object {
              "channel": 9,
              "status": 9,
              "value": 1,
            },
          },
          Object {
            "entryId": 1,
            "input": Object {
              "channel": 9,
              "status": 9,
              "value": 2,
            },
            "output": Object {
              "channel": 9,
              "status": 9,
              "value": 2,
            },
          },
          Object {
            "entryId": 2,
            "input": Object {
              "channel": 9,
              "status": 9,
              "value": 3,
            },
            "output": Object {
              "channel": 9,
              "status": 9,
              "value": 3,
            },
          },
          Object {
            "entryId": 3,
            "input": Object {
              "channel": 9,
              "status": 9,
              "value": 4,
            },
            "output": Object {
              "channel": 9,
              "status": 9,
              "value": 4,
            },
          },
        ],
        "groupId": 0,
        "label": "Group A",
        "selectedEntryId": NaN,
        "selectedRows": Array [],
        "sortBy": "SORT_BY_ALL",
        "sortDir": 1,
        "sortOn": 0,
        "value": 110,
      }
    }
    mappings={
      Object {
        "channels": Array [
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          "BFD3",
          null,
          null,
          null,
          null,
          null,
          null,
        ],
        "dialogVisible": false,
        "stockMappings": Array [
          "2box",
          "Addictive Drums",
          "Alesis DM Pro",
          "Alesis DM10",
          "Alesis DM5",
          "BFD2",
          "BFD3",
          "Battery 3",
          "E-MU Protean Acoustic",
          "E-MU Protean Bread n Butter",
          "E-MU Protean Studio",
          "E-MU Protean Synth",
          "EZ Drummer The Classic EZX",
          "EZDrummer",
          "EZDrummer Jazz Kit",
          "EZDrummer Latin Percussion",
          "General MIDI",
          "Infinite Instruments",
          "John Emrich - Articulations 1",
          "Kontakt 2",
          "Ocean Way Drums",
          "Pearl Redbox",
          "Roland HandSonic 15",
          "Roland TD-10",
          "Roland TD-10 Perc 1",
          "Roland TD-10 Perc 2",
          "Roland TD-10 Perc 3",
          "Roland TD-10 Perc 4",
          "Roland TD-12",
          "Roland TD-12 Perc 1 (Latin)",
          "Roland TD-12 Perc 2 (Indian)",
          "Roland TD-12 Perc 3 (African)",
          "Roland TD-12 Perc 4 (Salsa)",
          "Roland TD-12 Perc 5 (SFX)",
          "Roland TD-12 Perc 6-8 (User)",
          "Roland TD-20",
          "Roland TD-20 Perc",
          "Roland TD-3",
          "Roland TD-30",
          "Roland TD-30 Perc 1 (Latin)",
          "Roland TD-30 Perc 2 (Indian)",
          "Roland TD-30 Perc 3 (African)",
          "Roland TD-30 Perc 4 (Salsa)",
          "Roland TD-30 Perc 5 (SFX)",
          "Roland TD-30 Perc 6-8 (User)",
          "Roland TD-5",
          "Roland TD-6",
          "Roland TD-6 Perc 1",
          "Roland TD-6 Perc 10 (Special)",
          "Roland TD-6 Perc 2",
          "Roland TD-6 Perc 3 (Room)",
          "Roland TD-6 Perc 4 (Power)",
          "Roland TD-6 Perc 5 (Elec)",
          "Roland TD-6 Perc 6 (808)",
          "Roland TD-6 Perc 7 (Jazz)",
          "Roland TD-6 Perc 8 (Brush)",
          "Roland TD-6 Perc 9 (Perc)",
          "Roland TD-7",
          "Roland TD-8",
          "Roland TD-8 Perc 1",
          "Roland TD-8 Perc 10 (Special)",
          "Roland TD-8 Perc 2",
          "Roland TD-8 Perc 3 (Room)",
          "Roland TD-8 Perc 4 (Power)",
          "Roland TD-8 Perc 5 (Elec)",
          "Roland TD-8 Perc 6 (808)",
          "Roland TD-8 Perc 7 (Jazz)",
          "Roland TD-8 Perc 8 (Brush)",
          "Roland TD-8 Perc 9 (Perc)",
          "Roland TD-9",
          "Roland TD-9 Perc",
          "Simmons SD1000",
          "Simmons SD5X",
          "Simmons SD7",
          "Simmons SD7PK",
          "Simmons SD9K",
          "Sonic Reality iMap Extended",
          "Sonic Reality iMap Standard",
          "Studio ProFiles",
          "Superior Drummer",
          "Yamaha DTX 700",
          "Yamaha DTXplorer",
          "Zendrum Stompblock",
          "Zendrum TRS",
          "Zendrum TRS 2.0",
        ],
        "userDialogVisible": false,
        "userImportDialogVisible": false,
        "userMappings": Array [
          "BFD3 Custom ZenEdit",
          "reaper",
        ],
      }
    }
    okButtonRef={
      Object {
        "current": null,
      }
    }
    onSubmit={[Function]}
    saveEntryEdit={[MockFunction]}
    shiftGroups={
      Object {
        "groups": Array [
          Object {
            "active": false,
            "channel": 9,
            "editQueue": Object {
              "entryId": -1,
              "input": Object {
                "channel": 9,
                "status": 9,
                "value": 0,
              },
              "output": Object {
                "channel": 9,
                "status": 9,
                "value": 0,
              },
            },
            "editing": false,
            "entries": Array [
              Object {
                "entryId": 0,
                "input": Object {
                  "channel": 9,
                  "status": 9,
                  "value": 1,
                },
                "output": Object {
                  "channel": 9,
                  "status": 9,
                  "value": 1,
                },
              },
              Object {
                "entryId": 1,
                "input": Object {
                  "channel": 9,
                  "status": 9,
                  "value": 2,
                },
                "output": Object {
                  "channel": 9,
                  "status": 9,
                  "value": 2,
                },
              },
              Object {
                "entryId": 2,
                "input": Object {
                  "channel": 9,
                  "status": 9,
                  "value": 3,
                },
                "output": Object {
                  "channel": 9,
                  "status": 9,
                  "value": 3,
                },
              },
              Object {
                "entryId": 3,
                "input": Object {
                  "channel": 9,
                  "status": 9,
                  "value": 4,
                },
                "output": Object {
                  "channel": 9,
                  "status": 9,
                  "value": 4,
                },
              },
            ],
            "groupId": 0,
            "label": "Group A",
            "selectedEntryId": NaN,
            "selectedRows": Array [],
            "sortBy": "SORT_BY_ALL",
            "sortDir": 1,
            "sortOn": 0,
            "value": 110,
          },
          Object {
            "active": false,
            "channel": 9,
            "editQueue": Object {
              "entryId": -1,
              "input": Object {
                "channel": 9,
                "status": 9,
                "value": 0,
              },
              "output": Object {
                "channel": 9,
                "status": 9,
                "value": 0,
              },
            },
            "editing": false,
            "entries": Array [
              Object {
                "entryId": 0,
                "input": Object {
                  "channel": 9,
                  "status": 9,
                  "value": 5,
                },
                "output": Object {
                  "channel": 9,
                  "status": 9,
                  "value": 5,
                },
              },
              Object {
                "entryId": 1,
                "input": Object {
                  "channel": 9,
                  "status": 9,
                  "value": 6,
                },
                "output": Object {
                  "channel": 9,
                  "status": 9,
                  "value": 6,
                },
              },
              Object {
                "entryId": 2,
                "input": Object {
                  "channel": 9,
                  "status": 9,
                  "value": 7,
                },
                "output": Object {
                  "channel": 9,
                  "status": 9,
                  "value": 7,
                },
              },
            ],
            "groupId": 1,
            "label": "Group B",
            "selectedEntryId": NaN,
            "selectedRows": Array [],
            "sortBy": "SORT_BY_ALL",
            "sortDir": 1,
            "sortOn": 0,
            "value": 111,
          },
          Object {
            "active": false,
            "channel": 9,
            "editQueue": Object {
              "entryId": -1,
              "input": Object {
                "channel": 9,
                "status": 9,
                "value": 0,
              },
              "output": Object {
                "channel": 9,
                "status": 9,
                "value": 0,
              },
            },
            "editing": false,
            "entries": Array [
              Object {
                "entryId": 0,
                "input": Object {
                  "channel": 9,
                  "status": 9,
                  "value": 8,
                },
                "output": Object {
                  "channel": 9,
                  "status": 9,
                  "value": 8,
                },
              },
              Object {
                "entryId": 1,
                "input": Object {
                  "channel": 9,
                  "status": 9,
                  "value": 9,
                },
                "output": Object {
                  "channel": 9,
                  "status": 9,
                  "value": 9,
                },
              },
            ],
            "groupId": 2,
            "label": "Group C",
            "selectedEntryId": NaN,
            "selectedRows": Array [],
            "sortBy": "SORT_BY_ALL",
            "sortDir": 1,
            "sortOn": 0,
            "value": 112,
          },
          Object {
            "active": false,
            "channel": 9,
            "editQueue": Object {
              "entryId": -1,
              "input": Object {
                "channel": 9,
                "status": 9,
                "value": 0,
              },
              "output": Object {
                "channel": 9,
                "status": 9,
                "value": 0,
              },
            },
            "editing": false,
            "entries": Array [
              Object {
                "entryId": 0,
                "input": Object {
                  "channel": 9,
                  "status": 9,
                  "value": 10,
                },
                "output": Object {
                  "channel": 9,
                  "status": 9,
                  "value": 10,
                },
              },
            ],
            "groupId": 3,
            "label": "Group D",
            "selectedEntryId": NaN,
            "selectedRows": Array [],
            "sortBy": "SORT_BY_ALL",
            "sortDir": 1,
            "sortOn": 0,
            "value": 113,
          },
        ],
        "maxEntries": 112,
        "selectedGroupIdx": 0,
        "totalEntries": 10,
      }
    }
  />
  <div>
    When Group 
    A
     is enabled, this rule will alter any messages that match the INPUT so that they take on the characteristics of the OUTPUT.
    <br />
    <br />
    If Note Stack is selected for OUTPUT, then set the stacked note # there.
  </div>
  <div
    style={
      Object {
        "display": "flex",
        "flexFlow": "row nowrap",
        "justifyContent": "flex-end",
        "marginRight": 12,
      }
    }
  >
    <WithStyles(Button)
      onClick={[Function]}
      tag="btnCancel"
    >
      Cancel
    </WithStyles(Button)>
    <WithStyles(Button)
      buttonRef={
        Object {
          "current": null,
        }
      }
      color="primary"
      onClick={[Function]}
      tabIndex={-1}
      tag="btnApply"
      variant="contained"
    >
      Apply
    </WithStyles(Button)>
  </div>
</Modal>
`;

exports[`EditEntryDlg tests renders correctly when there is no group 1`] = `<section />`;
